The Button Widget




Normal Buttons

We've almost seen all there is to see of the button widget. It's pretty simple. 
There is however more than one way to create a button. BeYou can use the 
[CODE]new Gtk.Button.new_with_label()[/CODE] or 
[CODE]Gtk.Button.new_with_mnemonic()[/CODE] to create a button with a label, use 
[CODE]Gtk.Button.new_from_stock()[/CODE] to create a button containing the image 
and text from a stock item or use [CODE]Gtk.Button.new()[/CODE] to create a 
blank button. It's then up to you to pack a label or pixmap into this new 
button. To do this, create a new box, and then pack your objects into this box 
using the usual [CODE]Gtk.Box.pack_start()[/CODE], and then use 
[CODE]Gtk.Container.add()[/CODE] to pack the box into the button.

Here's an example of using [CODE]Gtk.Button.new()[/CODE] to create a button 
with an image and a label in it. I've broken up the code to create a box from 
the rest so you can use it in your programs. There are further examples of using 
images later in the tutorial.

[CODE]

[CODE]

The xpm_label_box() function could be used to pack images and labels into any widget that can be a container.

The Button widget has the following signals:

pressed - emitted when pointer button is pressed within Button widget

released - emitted when pointer button is released within Button widget

clicked - emitted when pointer button is pressed and then released within Button widget

enter - emitted when pointer enters Button widget

leave - emitted when pointer leaves Button widget

